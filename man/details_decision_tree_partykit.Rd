% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decision_tree_partykit.R
\name{details_decision_tree_partykit}
\alias{details_decision_tree_partykit}
\title{Decision trees via partykit}
\description{
\code{\link[partykit:ctree]{partykit::ctree()}} fits a model as a set of if/then statements that creates a
tree-based structure using hypothesis testing methods.
}
\details{
For this engine, there are multiple modes: censored regression,
regression, and classification
\subsection{Tuning Parameters}{

This model has 2 tuning parameters:
\itemize{
\item \code{tree_depth}: Tree Depth (type: integer, default: see below)
\item \code{min_n}: Minimal Node Size (type: integer, default: 20L)
}

The \code{tree_depth} parameter defaults to \code{0} which means no restrictions
are applied to tree depth.

An engine-specific parameter for this model is:
\itemize{
\item \code{mtry}: the number of predictors, selected at random, that are
evaluated for splitting. The default is to use all predictors.
}
}

\subsection{Translation from parsnip to the original package (regression)}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(bonsai)

decision_tree(tree_depth = integer(1), min_n = integer(1)) \%>\% 
  set_engine("partykit") \%>\% 
  set_mode("regression") \%>\% 
  translate()
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## Decision Tree Model Specification (regression)
## 
## Main Arguments:
##   tree_depth = integer(1)
##   min_n = integer(1)
## 
## Computational engine: partykit 
## 
## Model fit template:
## parsnip::ctree_train(formula = missing_arg(), data = missing_arg(), 
##     weights = missing_arg(), maxdepth = integer(1), minsplit = min_rows(0L, 
##         data))
}\if{html}{\out{</div>}}
}

\subsection{Translation from parsnip to the original package (classification)}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(bonsai)

decision_tree(tree_depth = integer(1), min_n = integer(1)) \%>\% 
  set_engine("partykit") \%>\% 
  set_mode("classification") \%>\% 
  translate()
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## Decision Tree Model Specification (classification)
## 
## Main Arguments:
##   tree_depth = integer(1)
##   min_n = integer(1)
## 
## Computational engine: partykit 
## 
## Model fit template:
## parsnip::ctree_train(formula = missing_arg(), data = missing_arg(), 
##     weights = missing_arg(), maxdepth = integer(1), minsplit = min_rows(0L, 
##         data))
}\if{html}{\out{</div>}}

\code{parsnip::ctree_train()} is a wrapper around
\code{\link[partykit:ctree]{partykit::ctree()}} (and other functions) that
makes it easier to run this model.
}

\subsection{Translation from parsnip to the original package (censored regression)}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(censored)

decision_tree(tree_depth = integer(1), min_n = integer(1)) \%>\% 
  set_engine("partykit") \%>\% 
  set_mode("censored regression") \%>\% 
  translate()
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## Decision Tree Model Specification (censored regression)
## 
## Main Arguments:
##   tree_depth = integer(1)
##   min_n = integer(1)
## 
## Computational engine: partykit 
## 
## Model fit template:
## parsnip::ctree_train(formula = missing_arg(), data = missing_arg(), 
##     maxdepth = integer(1), minsplit = min_rows(0L, data))
}\if{html}{\out{</div>}}

\code{censored::cond_inference_surv_ctree()} is a wrapper around
\code{\link[partykit:ctree]{partykit::ctree()}} (and other functions) that
makes it easier to run this model.
}

\subsection{Preprocessing requirements}{

This engine does not require any special encoding of the predictors.
Categorical predictors can be partitioned into groups of factor levels
(e.g.Â \verb{\{a, c\}} vs \verb{\{b, d\}}) when splitting at a node. Dummy variables
are not required for this model.
}

\subsection{References}{
\itemize{
\item \href{https://jmlr.org/papers/v16/hothorn15a.html}{partykit: A Modular Toolkit for Recursive Partytioning in R}
\item Kuhn, M, and K Johnson. 2013. \emph{Applied Predictive Modeling}.
Springer.
}
}
}
\keyword{internal}

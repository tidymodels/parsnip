# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
#
# NOTE: This workflow is overkill for most R packages and
# check-standard.yaml is likely a better choice.
# usethis::use_github_action("check-standard") will install it.
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

name: old-tensorflow

jobs:
  old-tensorflow:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          # Use older ubuntu to maximise backward compatibility
          - {os: ubuntu-18.04,   r: 'devel', http-user-agent: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      CXX14: g++
      CXX14STD: -std=c++1y
      CXX14FLAGS: -Wall -g -02

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck

      - name: Install dev reticulate
        run: pak::pkg_install('reticulate')
        shell: Rscript {0}

      - name: Install Miniconda
        # conda can fail at downgrading python, so we specify python version in advance
        env:
          RETICULATE_MINICONDA_PYTHON_VERSION: "3.7"
        run: reticulate::install_miniconda() # creates r-reticulate conda env by default
        shell: Rscript {0}

      - name: Install TensorFlow
        run: |
          tensorflow::install_tensorflow(version='1.15', conda_python_version = NULL)
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
